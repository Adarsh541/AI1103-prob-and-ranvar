# -*- coding: utf-8 -*-
"""Assignment3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MvL2cDVFvemUakNtr4kvN9nfOVnEAzAn
"""

import numpy as np
import random
import matplotlib.pyplot as plt
from scipy.stats import bernoulli
from random import choices
import subprocess
import shlex

# defining random variable X where 1 represents a red ball is drawn
X=[0,1] 
#probability distribution for second draw if in first draw a black ball is drawn
pr_dis_bl=[4/9,5/9]
#probability distribution for second draw if in first draw a red ball is drawn
pr_dis_red=[5/9,4/9]
#10000 simulations
simlen = 10000
#probability of drawing red ball in first draw
prob = 1/2
#generating data for first draw
data_bern = bernoulli.rvs(size=simlen,p=prob)
#generating data for second draw
b=[0]*(simlen)
for i in range(simlen):
    if (data_bern[i] == 0) :
       b[i]=random.choices(X,pr_dis_bl)
    else:
        b[i]= random.choices(X,pr_dis_red)
# counting number of 1's in data for second draw        
num_red=b.count([1])
#calculating probability of red in second draw
pr_red=num_red/simlen

#plotting
cases = ["x = 0", "x = 1"]
prob_T = [ 1/2,1/2 ]
prob_S = [ 1-pr_red ,pr_red]
x = np.arange(len(cases))
plt.stem(x  , prob_S, markerfmt='o', use_line_collection=True, basefmt=None  ,linefmt='b', label='Simulated')
plt.stem(x  , prob_T, markerfmt='o',use_line_collection=True, basefmt=None , linefmt='orange' ,label='analysis')

plt.xlabel('random variable X')
plt.ylabel('Probability')
plt.xticks(x ,[0,1])
plt.legend()
plt.grid()
plt.title('plot of probabilities') 
plt.savefig('Assignment3.png' , dpi=100)
plt.show()


print(data_bern)
print(b)
print(pr_red)